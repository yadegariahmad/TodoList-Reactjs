{"version":3,"sources":["containers/Add/index.jsx"],"names":["AddAndEditTodo","state","content","editMode","location","this","props","edit","setState","todo","text","_this$props","_addTodo","_editTodo","_loader","history","_this$state","userId","localStorage","getItem","SHOW_LOADER","todoId","_id","completed","_this2","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","className","cols","rows","value","placeholder","onChange","e","updateContent","target","type","onClick","submit","react_i18next__WEBPACK_IMPORTED_MODULE_7__","i18nKey","Component","connect","signedUp","user","dispatch","body","addTodo","editTodo","loader","withTranslation"],"mappings":"kNAQMA,qNAEJC,MAAQ,CACNC,QAAS,GACTC,UAAU,sFAIZ,IACUC,EAAaC,KAAKC,MAAlBF,SACJA,EAASH,OAASG,EAASH,MAAMM,MAEnCF,KAAKG,SAAS,CACZN,QAASE,EAASH,MAAMQ,KAAKP,QAC7BC,UAAU,0CAKFO,GAEZL,KAAKG,SAAS,CACZN,QAASQ,qCAKb,IAAAC,EAOMN,KAAKC,MALPM,EAFJD,EAEIC,SACAC,EAHJF,EAGIE,UACAC,EAJJH,EAIIG,QACAV,EALJO,EAKIP,SACAW,EANJJ,EAMII,QANJC,EAQgCX,KAAKJ,MAA3BE,EARVa,EAQUb,SAAUD,EARpBc,EAQoBd,QACZe,EAASC,aAAaC,QAAQ,WAEpCL,EAAQM,KAEHjB,GAgBHU,EALa,CACXQ,OAAQjB,EAASH,MAAMQ,KAAKa,IAC5BpB,UACAe,UAEcF,GARhBH,EANa,CACXU,IAAK,GACLpB,UACAqB,WAAW,EACXN,UAEaF,oCAanB,IAAAS,EAAAnB,KACUH,EAAYG,KAAKJ,MAAjBC,QACR,OACEuB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAAA,YACEE,KAAM,GACNC,KAAM,GACNC,MAAO7B,EACP8B,YAAY,eACZJ,UAAU,QACVK,SAAU,SAACC,GAAQV,EAAKW,cAAcD,EAAEE,OAAOL,UAEjDN,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,UAAQC,UAAU,UAAUS,KAAK,SAASC,QAAS,WAAQd,EAAKe,WAAad,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAOC,QAAQ,0BA3EzEC,cAiHdC,sBAnBS,SAAA1C,GAAK,MAAK,CAChC2C,SAAU3C,EAAM4C,KAAKD,WAGI,SAAAE,GAAQ,MAAK,CACtClC,SAAU,SAACmC,EAAMhC,GAEf+B,EAASE,YAAQD,EAAMhC,KAEzBF,UAAW,SAACkC,EAAMhC,GAEhB+B,EAASG,YAASF,EAAMhC,KAE1BD,QAAS,SAACuB,GAERS,EAASI,YAAOb,OAILM,CAA6CQ,YAAgB,eAAhBA,CAAgCnD","file":"static/js/7.2dc37cf3.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Trans, withTranslation } from 'react-i18next';\r\nimport PropTypes from 'prop-types';\r\nimport { addTodo, editTodo, loader } from '../../store/actions';\r\nimport { SHOW_LOADER } from '../../store/actionTypes';\r\nimport './add.scss';\r\n\r\nclass AddAndEditTodo extends Component\r\n{\r\n  state = {\r\n    content: '',\r\n    editMode: false,\r\n  };\r\n\r\n  componentDidMount()\r\n  {\r\n    const { location } = this.props;\r\n    if (location.state && location.state.edit)\r\n    {\r\n      this.setState({\r\n        content: location.state.todo.content,\r\n        editMode: true,\r\n      });\r\n    }\r\n  }\r\n\r\n  updateContent(text)\r\n  {\r\n    this.setState({\r\n      content: text,\r\n    });\r\n  }\r\n\r\n  submit()\r\n  {\r\n    const {\r\n      _addTodo,\r\n      _editTodo,\r\n      _loader,\r\n      location,\r\n      history,\r\n    } = this.props;\r\n    const { editMode, content } = this.state;\r\n    const userId = localStorage.getItem('userId');\r\n\r\n    _loader(SHOW_LOADER);\r\n\r\n    if (!editMode)\r\n    {\r\n      const todo = {\r\n        _id: '',\r\n        content,\r\n        completed: false,\r\n        userId,\r\n      };\r\n      _addTodo(todo, history);\r\n    } else\r\n    {\r\n      const todo = {\r\n        todoId: location.state.todo._id,\r\n        content,\r\n        userId,\r\n      };\r\n      _editTodo(todo, history);\r\n    }\r\n  }\r\n\r\n  render()\r\n  {\r\n    const { content } = this.state;\r\n    return (\r\n      <div className=\"add\">\r\n        <div className=\"text-container\">\r\n          <textarea\r\n            cols={70}\r\n            rows={10}\r\n            value={content}\r\n            placeholder=\"TODO Content\"\r\n            className=\"input\"\r\n            onChange={(e) => { this.updateContent(e.target.value); }}\r\n          />\r\n          <br />\r\n          <button className=\"btn-add\" type=\"button\" onClick={() => { this.submit(); }}><Trans i18nKey=\"card.SUBMIT\" /></button>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nAddAndEditTodo.propTypes = {\r\n  location: PropTypes.shape({\r\n    state: PropTypes.any,\r\n  }).isRequired,\r\n  history: PropTypes.shape({\r\n    push: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  _addTodo: PropTypes.func.isRequired,\r\n  _editTodo: PropTypes.func.isRequired,\r\n  _loader: PropTypes.func.isRequired,\r\n};\r\n\r\nconst mapStateToProps = state => ({\r\n  signedUp: state.user.signedUp,\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  _addTodo: (body, history) =>\r\n  {\r\n    dispatch(addTodo(body, history));\r\n  },\r\n  _editTodo: (body, history) =>\r\n  {\r\n    dispatch(editTodo(body, history));\r\n  },\r\n  _loader: (type) =>\r\n  {\r\n    dispatch(loader(type));\r\n  },\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(withTranslation('translations')(AddAndEditTodo));\r\n"],"sourceRoot":""}